name: Matrix Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC

jobs:
  matrix-test:
    name: Test on ${{ matrix.os }} with Java ${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: ['17', '21']
        include:
          # Add specific configurations
          - os: ubuntu-latest
            java-version: '21'
            run-integration-tests: true
          # Exclude certain combinations if needed
        exclude:
          # Example: Skip Java 17 on macOS
          - os: macos-latest
            java-version: '17'
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        
      - name: Grant execute permission for gradlew
        if: runner.os != 'Windows'
        run: chmod +x gradlew
        
      - name: Run tests on Linux/macOS
        if: runner.os != 'Windows'
        run: ./gradlew test
        
      - name: Run tests on Windows
        if: runner.os == 'Windows'
        run: .\gradlew.bat test
        
      - name: Run integration tests
        if: matrix.run-integration-tests == true
        run: ./gradlew integrationTest
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-java${{ matrix.java-version }}
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 30
          
      - name: Generate test report
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Test Results - ${{ matrix.os }} Java ${{ matrix.java-version }}
          path: '**/build/test-results/test/*.xml'
          reporter: java-junit
          fail-on-error: false

  compatibility-matrix:
    name: Database Compatibility - ${{ matrix.database }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        database:
          - postgres:14
          - postgres:15
          - postgres:16
          
    services:
      database:
        image: ${{ matrix.database }}
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Run database tests
        run: |
          chmod +x gradlew
          ./gradlew :database:test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: db-test-results-${{ matrix.database }}
          path: database/build/reports/tests/
          retention-days: 30

  browser-compatibility:
    name: Browser Tests - ${{ matrix.browser }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ui-components/package-lock.json
          
      - name: Install dependencies
        run: |
          cd ui-components
          npm ci
          
      - name: Install browsers
        run: |
          cd ui-components
          npx playwright install ${{ matrix.browser }}
          
      - name: Run browser tests
        run: |
          cd ui-components
          npm run test:e2e -- --browser=${{ matrix.browser }}
        continue-on-error: true  # Don't fail if e2e tests aren't set up yet
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: browser-test-results-${{ matrix.browser }}
          path: ui-components/test-results/
          retention-days: 30

  aggregate-results:
    name: Aggregate Test Results
    runs-on: ubuntu-latest
    needs: [matrix-test, compatibility-matrix, browser-compatibility]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-results
          
      - name: Generate aggregate report
        run: |
          echo "# Test Matrix Results" > matrix-report.md
          echo "" >> matrix-report.md
          
          echo "## Platform Tests" >> matrix-report.md
          echo "| OS | Java Version | Status |" >> matrix-report.md
          echo "|---|---|---|" >> matrix-report.md
          
          # Parse results and generate table
          for os in ubuntu-latest windows-latest macos-latest; do
            for java in 17 21; do
              if [[ -d "all-results/test-results-${os}-java${java}" ]]; then
                echo "| $os | $java | ✅ |" >> matrix-report.md
              else
                echo "| $os | $java | ❌ |" >> matrix-report.md
              fi
            done
          done
          
          echo "" >> matrix-report.md
          echo "## Database Compatibility" >> matrix-report.md
          echo "| Database | Status |" >> matrix-report.md
          echo "|---|---|" >> matrix-report.md
          
          for db in postgres:14 postgres:15 postgres:16; do
            if [[ -d "all-results/db-test-results-${db}" ]]; then
              echo "| $db | ✅ |" >> matrix-report.md
            else
              echo "| $db | ❌ |" >> matrix-report.md
            fi
          done
          
          echo "" >> matrix-report.md
          echo "## Browser Compatibility" >> matrix-report.md
          echo "| Browser | Status |" >> matrix-report.md
          echo "|---|---|" >> matrix-report.md
          
          for browser in chrome firefox edge; do
            if [[ -d "all-results/browser-test-results-${browser}" ]]; then
              echo "| $browser | ✅ |" >> matrix-report.md
            else
              echo "| $browser | ❌ |" >> matrix-report.md
            fi
          done
          
          cat matrix-report.md >> $GITHUB_STEP_SUMMARY
          
      - name: Upload aggregate report
        uses: actions/upload-artifact@v4
        with:
          name: matrix-test-report
          path: matrix-report.md
          retention-days: 30
          
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('matrix-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });