spring:
  application:
    name: productdomain-api
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  
  # Database configuration (uses database module settings)
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/productdomain}
    username: ${DB_USERNAME:productdomain}
    password: ${DB_PASSWORD:productdomain}
  
  # GraphQL configuration
  graphql:
    graphiql:
      enabled: true
      path: /graphiql
    schema:
      printer:
        enabled: true
      locations:
        - classpath:graphql/
      file-extensions:
        - .graphqls
        - .gqls
    websocket:
      path: /graphql-ws
  
  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8080/realms/productdomain}
          jwk-set-uri: ${OAUTH2_JWK_SET_URI:http://localhost:8080/realms/productdomain/protocol/openid-connect/certs}
  
  # Actuator configuration
  actuator:
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus,loggers,flyway
        base-path: /actuator
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      export:
        prometheus:
          enabled: true
      distribution:
        percentiles-histogram:
          http.server.requests: true
      tags:
        application: ${spring.application.name}
        environment: ${spring.profiles.active}

# Server configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on-param
    include-exception: false

# Logging configuration
logging:
  level:
    com.erpmicroservices.productdomain: DEBUG
    org.springframework.graphql: DEBUG
    org.springframework.security: DEBUG
    graphql: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0

# API Documentation
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    display-request-duration: true
    disable-swagger-default-url: true

# Application-specific configuration
productdomain:
  api:
    graphql:
      max-query-depth: 10
      max-query-complexity: 1000
      introspection-enabled: ${GRAPHQL_INTROSPECTION_ENABLED:true}
    security:
      cors:
        allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600
    rate-limiting:
      enabled: ${RATE_LIMITING_ENABLED:true}
      requests-per-minute: ${RATE_LIMIT_RPM:60}
      requests-per-hour: ${RATE_LIMIT_RPH:1000}